import Head from "next/head";
import styles from "../../../styles/Auth.module.css";

import { useFormik } from 'formik';
import * as Yup from 'yup';
import { useRouter } from 'next/router';
import { postRequest } from '../../api/apiConfig';
import { useState } from 'react';
import { LoadingAnimation } from "../../../components";

export default function Register() {

  const router = useRouter();
  const [onLoading, setOnLoading] = useState(false);
  const [msg, setMsg] = useState('');

  const formik = useFormik({
    initialValues: {
      name: '',
      email: '',
      password: '',
      confirmPassword: '',
    },
    validationSchema: Yup.object({
      name: Yup.string()
        .required('Nama harus diisi'),
      email: Yup.string()
        .email()
        .required('Email harus diisi'),
      password: Yup.string()
        .required('Password harus diisi')
        .min(8, 'Password minimal 6 karakter')
        .matches(
          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,
          "Harus berisi 8 karakter, satu huruf besar, satu huruf kecil, dan satu angka"
        ),
      confirmPassword: Yup.string()
        .required('Password harus diisi')
        .oneOf([Yup.ref("password"), null], "Passwords harus sama"),
    }),
    onSubmit: values => {
      onRegister(values)
      setOnLoading(true)
    },
  })

  const onRegister = async (values) => {
    try {
      const { name: thisName, email: thisEmail, password: thisPassword } = values
      await postRequest('user/register', {
        name: thisName,
        email: thisEmail,
        password: thisPassword
      })
      router.push('/auth/login')
    } catch (error) {
      setMsg(error.response.data.message)
      setOnLoading(true)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.flexContainer}>
        <div className={styles.flexLeft}>
          <div>
            Left<br></br> Hand.
          </div>
        </div>
        <div className={styles.flexRight}>
          <div className={styles.card}>
            <p className={styles.head}>Daftar</p>
            <div className={styles.input}>
              <form onSubmit={formik.handleSubmit}>
                <div className="mb-3">
                  <label htmlFor="name">Nama</label>
                  <input
                    type="name"
                    id="name"
                    placeholder="Nama Lengkap"
                    name="name"
                    onChange={formik.handleChange}
                    value={formik.values.name}
                  />
                  {formik.touched.name && formik.errors.name ? (
                    <div className="text-danger">{formik.errors.name}</div>
                  ) : null}
                </div>
                <div className="mb-3">
                  <label htmlFor="email">Email</label>
                  <input
                    type="email"
                    id="email"
                    placeholder="Contoh: johndee@gmail.com"
                    name="email"
                    onChange={formik.handleChange}
                    value={formik.values.email}
                  />
                  {formik.touched.email && formik.errors.email ? (
                    <div className="text-danger">{formik.errors.email}</div>
                  ) : null}
                </div>
                <div className="mb-3">
                  <label htmlFor="password">Password</label>
                  <input
                    type="password"
                    id="password"
                    placeholder="Masukkan Password"
                    name="password"
                    onChange={formik.handleChange}
                    value={formik.values.password}
                  />
                  <p className="mb-0">Gunakan minimal 8 karakter dengan campuran huruf, angka {'&'} simbol</p>

                  {formik.touched.password && formik.errors.password ? (
                    <div className="text-danger">{formik.errors.password}</div>
                  ) : null}
                </div>
                <div className="mb-3">
                  <label htmlFor="confirmPassword">Konfirmasi Password</label>
                  <input
                    type="password"
                    id="confirmPassword"
                    placeholder="Masukkan Konfirmasi Password"
                    name="confirmPassword"
                    onChange={formik.handleChange}
                    value={formik.values.confirmPassword}
                  />
                  {formik.touched.confirmPassword && formik.errors.confirmPassword ? (
                    <div className="text-danger">{formik.errors.confirmPassword}</div>
                  ) : null}
                </div>
                {onLoading ? <LoadingAnimation /> : 
                <button type="submit" className={styles.button}>
                  Daftar
                </button>}
              </form>
            </div>
            <p className={styles.footer}>
              Sudah punya akun? <a href="login">Masuk disini</a>
            </p>
          </div>
        </div>
      </main>
    </div>
  );
}
